name: Daily Sci Brief
run-name: "Daily Sci Brief • ${{ github.ref_name }} • run ${{ github.run_number }}"

on:
  workflow_dispatch:
  schedule:
    - cron: "0 * * * *"  # hourly UTC; guard limits to 5am ET + every 3h

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  generate-brief:
name: Daily Sci Brief
run-name: "Daily Sci Brief • ${{ github.ref_name }} • run ${{ github.run_number }}"
    runs-on: ubuntu-latest
    steps:
      - name: Schedule guard (5am ET + every 3h)
        if: ${{ github.event_name == 'schedule' }}
        run: |
          HOUR=$(TZ=America/New_York date +%H)
          if [ "$HOUR" -eq 5 ] || [ $(( (10#$HOUR - 5) % 3 )) -eq 0 ]; then
            echo "Proceeding at $HOUR:00 ET"
          else
            echo "Skipping at $HOUR:00 ET (not in schedule)"; exit 78
          fi

      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install feedparser requests python-dateutil tldextract beautifulsoup4 pyyaml
          fi

      - name: Validate Python (fail fast)
  run: python -m py_compile scripts/*.py

- name: Generate site data (JSON/CSV/RSS)
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          SUMMARY_PROVIDER: ${{ vars.SUMMARY_PROVIDER }}
          LLM_ENHANCE_SUMMARIES: ${{ vars.LLM_ENHANCE_SUMMARIES }}
        run: |
          python scripts/gather.py
          test -f docs/daily.json || (echo "daily.json missing" && exit 1)

      - name: Write status file (for UI pill)
        run: |
          python - << 'PY'
          import json, time, os, sys
          j = json.load(open("docs/daily.json", "r", encoding="utf-8"))
          # Count items
          cnt = 0
          for g in j.get("groups", []):
            cnt += len(g.get("items", []))
          status = {
            "ok": True,
            "generated_at": j.get("generated_at"),
            "count": cnt,
            "sha": os.getenv("GITHUB_SHA"),
            "run_id": os.getenv("GITHUB_RUN_ID"),
            "ts_unix": int(time.time())
          }
          os.makedirs("docs", exist_ok=True)
          json.dump(status, open("docs/status.json","w",encoding="utf-8"), ensure_ascii=False, indent=2)
          PY

      - name: Commit archive (dates) to repo
        if: always()
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name  "brief-bot"
          git config user.email "actions@users.noreply.github.com"
          git add docs/records docs/archive.html docs/daily.json docs/status.json || true
          if ! git diff --cached --quiet; then
            git commit -m "archive/status: update $(date -u +%F)"
            git push origin HEAD:${{ github.ref_name }}
          else
            echo "No archive/status changes to commit."
          fi

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs

  publish-brief:
name: Daily Sci Brief
run-name: "Daily Sci Brief • ${{ github.ref_name }} • run ${{ github.run_number }}"
    runs-on: ubuntu-latest
    needs: generate-brief
    environment:
name: Daily Sci Brief
run-name: "Daily Sci Brief • ${{ github.ref_name }} • run ${{ github.run_number }}"
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4




